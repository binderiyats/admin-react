{"ast":null,"code":"var _jsxFileName = \"/Users/evening/Desktop/admin-react/src/pages/MenuPositions.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Heading from \"../components/Heading\";\nimport MenuPositionList from \"../components/Menu/Positions/PositionList\";\nimport axios from \"axios\";\nimport DynamicModal from \"../components/utils/DynamicModal\";\nimport MenuPositionCreate from \"../components/Menu/Positions/PositionCreate\";\nimport MenuEdit from \"../components/Menu/MenuEdit\";\nimport { useParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MenuPositions() {\n  _s();\n  const [positions, setPositions] = useState([]);\n  const [menus, setMenus] = useState([]);\n  const [modalContent, setModalContent] = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n  const [modalShow, setModalShow] = useState(false);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/menu-positions\").then(res => {\n      setPositions(res.data);\n    });\n  }, []);\n  const handleClose = () => setModalShow(false);\n  const modalClose = () => {\n    setModalContent( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n    setModalShow(false);\n  };\n  const afterSubmit = menu => {\n    modalClose();\n    setMenus([...menus, menu]);\n  };\n  const showCreateModal = () => {\n    setModalContent( /*#__PURE__*/_jsxDEV(MenuPositionCreate, {\n      afterSubmit: afterSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this));\n    setModalShow(true);\n  };\n  const afterEdit = category => {\n    modalClose();\n    let newMenus = menus.map(cat => {\n      if (cat.id === category.id) {\n        return category;\n      }\n      return cat;\n    });\n    setMenus(newMenus);\n  };\n  const showEditModal = menu => {\n    setModalContent( /*#__PURE__*/_jsxDEV(MenuEdit, {\n      category: menu,\n      afterEdit: afterEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this));\n    setModalShow(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm body-container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: \"Menu positions\",\n        handleShow: showCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuPositionList, {\n        items: positions,\n        onEdit: showEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DynamicModal, {\n      show: modalShow,\n      handleClose: handleClose,\n      title: \"Create position \",\n      content: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MenuPositions, \"BR6aKPTU3ndezUAnqynOGCcPM0I=\", false, function () {\n  return [useParams];\n});\n_c = MenuPositions;\nvar _c;\n$RefreshReg$(_c, \"MenuPositions\");","map":{"version":3,"names":["useEffect","useState","Heading","MenuPositionList","axios","DynamicModal","MenuPositionCreate","MenuEdit","useParams","MenuPositions","positions","setPositions","menus","setMenus","modalContent","setModalContent","modalShow","setModalShow","id","get","then","res","data","handleClose","modalClose","afterSubmit","menu","showCreateModal","afterEdit","category","newMenus","map","cat","showEditModal"],"sources":["/Users/evening/Desktop/admin-react/src/pages/MenuPositions.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Heading from \"../components/Heading\";\nimport MenuPositionList from \"../components/Menu/Positions/PositionList\";\nimport axios from \"axios\";\nimport DynamicModal from \"../components/utils/DynamicModal\";\nimport MenuPositionCreate from \"../components/Menu/Positions/PositionCreate\";\nimport MenuEdit from \"../components/Menu/MenuEdit\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function MenuPositions() {\n  const [positions, setPositions] = useState([]);\n  const [menus, setMenus] = useState([]);\n  const [modalContent, setModalContent] = useState(<></>);\n  const [modalShow, setModalShow] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/menu-positions\").then((res) => {\n      setPositions(res.data);\n    });\n  }, []);\n\n  const handleClose = () => setModalShow(false);\n\n  const modalClose = () => {\n    setModalContent(<></>);\n    setModalShow(false);\n  };\n\n  const afterSubmit = (menu) => {\n    modalClose();\n    setMenus([...menus, menu]);\n  };\n\n  const showCreateModal = () => {\n    setModalContent(<MenuPositionCreate afterSubmit={afterSubmit} />);\n    setModalShow(true);\n  };\n\n  const afterEdit = (category) => {\n    modalClose();\n    let newMenus = menus.map((cat) => {\n      if (cat.id === category.id) {\n        return category;\n      }\n      return cat;\n    });\n    setMenus(newMenus);\n  };\n\n  const showEditModal = (menu) => {\n    setModalContent(<MenuEdit category={menu} afterEdit={afterEdit} />);\n    setModalShow(true);\n  };\n\n  return (\n    <>\n      <div className=\"container-sm body-container\">\n        <Heading title=\"Menu positions\" handleShow={showCreateModal} />\n        <MenuPositionList items={positions} onEdit={showEditModal} />\n      </div>\n      <DynamicModal\n        show={modalShow}\n        handleClose={handleClose}\n        title=\"Create position \"\n        content={modalContent}\n      />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}